<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "mybatis-3-mapper.dtd">
<mapper namespace="com.sinse.boardapp.model.Notice">
	<!-- namespace 많은 수의 Mapper xml의 작성된 id들을 중복시키지 않기 위해
					
	 -->
	<!-- 기존의 DAO의 업무였던 CRUD작업의 쿼리 작성을 여기서 한다...
		DAO는 여전히 존재하되 , DAO가 직접 쿼리를 작성하지 않는 것 뿐이다... -->

	<select id="selectAll" resultType="com.sinse.boardapp.model.Notice">
		select * from notice order by notice_id desc
	</select>

	<!-- 글 한건 넣기 -->
	<insert id="insert" parameterType="com.sinse.boardapp.model.Notice">
		insert into notice(title, writer, content) values(#{title},#{writer},#{content})
	</insert>
	
	<!-- 글 한건 가져오기
	Mybatis가 스스로 Notice 모델에 담는다... 따라서 담은 결과는 resultType으로 반환해야한다.
	 -->
	<select id="select" parameterType = "int" resultType="com.sinse.boardapp.model.Notice">
		select *from notice where notice_id =#{notice_id}
	</select>
	
	
	<!-- 글 한건 지우기 -->
	<delete id="delete" parameterType="com.sinse.boardapp.model.Notice">
		DELETE FROM notice WHERE notice_id = #{notice_id}
	</delete>
	
	<!-- 
		SQL Mapper : SQL문과 Java객체와의 매핑을 자동으로 지원하느 프레임웍 , 
		Mybatis ORM (Object - Relation - Mapping) : Java 객체와 데이터 베이스를 자동으로 매핑 Hibernate , JPA
	 -->
	<!-- 글 한건 수정하기 -->
	<update id="update" parameterType="com.sinse.boardapp.model.Notice">
		update notice set title = #{title},writer = #{writer} , content = #{content} where notice_id = #{notice_id}
	</update>
	

</mapper>