
--------------------------------------------------------------------------------------------------------

수업 시작.

Mybatis와 hibernate의 차이점.

Mybatis - SQL Mapper (sql문과 java객체간 매핑)

hibernate - SQL문을 적지 않고 , Model객체만 set 하면 알아서 DB에 반영해줌.

--------------------------------------------------------------------------------------------------------

Hiberasyncs --> 새로고침 없는 애플리케이션 프로젝트 생성

lombok
mysql jdbc
logback
hibernate-core 5.6.15.Final
--------------------------------------------------------------------------------------------------------

- JPA는 java의 자체 api에서 지원하는 인터페이스, 즉 java 표준

- hibernate 사설로 JPA를 구현한 구현체, 표준은 아님

ORM = Object Relation Mapping (테이블과 java객체간의 매핑)


--------------------------------------------------------------------------------------------------------

Mybatis -> SqlSessionFactory -> SqlSession 쿼리 담당

Hibernate -> SessionFactory -> Session


--------------------------------------------------------------------------------------------------------
Hibernate 다룰 때 조심할 점 !!!

session.createQuery("from FoodType",FoodType.class);

ORM은 직접 테이블에 접근하지 않는다... 따라서 아래의 문장이 마치 table을 접근하는 것 처럼
보일 지라도 , from절의 대상이 되는 객체는 테이블이 아니라 클래스 !!!!

따라서 "from FoodType" 에서  FoodType은 클래스 !!



--------------------------------------------------------------------------------------------------------

- java7부터 try~with-resource 문법이 지원됨.

  자원을 사용한 후 , finally에서 닫는 중복코드를 단순화 시키고자 나온 문법

  즉 언어 차원에서 개발자가 해야할 close() 메서드 호출을 자동으로 해줌.

  !!! 주의 !!! 모든 close() 메서드를 대상으로 하지 않고 , Closeable을 구현한 객체만을 대상으로 함.

--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------








--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






	
--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------




--------------------------------------------------------------------------------------------------------

