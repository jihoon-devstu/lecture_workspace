0416_ 깃, 깃허브 기초 사용법 강의

add , commit , push , pull , branch 배울 예정.
정적페이지 호스팅 - JS , HTML , CSS

강의 자료 : https://bit.ly/git-0416
--------------------------------------------------------------------------------------------------------

git의 사용 용도
1. 소스코드의 버전 관리 시스템 , 시간 여행 기능 제공
2. 파일/프로젝트 되돌리기, 수정 내용 비교, 추적

로컬 버전관리 시스템 : RCS
중앙집중식 버전관리 시스템 : SVN , CVS
분산 버전관리 시스템 : Git , Mecurial
--------------------------------------------------------------------------------------------------------

① git 다운로드
 https://git-scm.com/downloads

② githuub = Git으로 관리하는 프로젝트를 올려둘 수 있는 호스팅 사이트

깃허브 이메일 주소 : wlsgksvheh1@naver.com
깃허브 유저네임 : jihoon-devstu
토큰 주소 : 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
--------------------------------------------------------------------------------------------------------

CLI = command user interface
GUI = graphic user interface

배포 환경에선 CLI가 더 편함.
비쥬얼 스튜디오 코드에서 쓸 때 , 번거로울 수 있음.
GUI 는 더 쉬움
CLI 는 더 정교함
--------------------------------------------------------------------------------------------------------

③ 소스트리 설치.

머큐리얼 체크 해제 
원격저장소 내 계정 연동 

④ VS  code 설치.

code.visualstudio.com 
우측 위 다운로드 - 다음다음다음 설치
--------------------------------------------------------------------------------------------------------

⑤ 깃이 없다면?
이전 코드랑 어떤게 달라졌는지 찾아볼 수가 없음.
깃으로 삭제 , 수정 히스토리 쉽게 확인 가능.
--------------------------------------------------------------------------------------------------------

⑥ 소스코드에서 Create 만들어놓은 폴더 경로 선택 및 생성 (Git,github\Minihomepage)
 생성 후 .git 폴더가 숨김상태로 생성됨. (정보 전부다 해당 폴더 안에 생성)
--------------------------------------------------------------------------------------------------------

⑦ VS code 에서 파일열기 _ (Git,github\Minihomepage) 경로 선택
파일생성 - README.md
1  # 미니 홈페이지
--------------------------------------------------------------------------------------------------------

⑧ 소스트리에서 커밋하는 법 강의
commit = 순간이동 할 위치에 깃발을 꽂다
소스트리 - 왼쪽에 History - 커밋하지 않은 변경사항
스테이지에 올라간 파일 / 올라가지 않은 파일
파일 상태 - README.md 파일 +표시 눌러서 스테이지에 올라간 파일로 전송
-> add 
-> 소스코드로 작성 하려면 gitadd README.md

add를 하고나면 commit을 할 수 있음.

왼쪽 위 +커밋 선택 후 "사이트 추가" , 커밋 버튼 클릭

vs code에서 코드들을 수정 하고 소스트리를 가보면 , 커밋하지 않은 변경사항 확인 가능.
add 후 commit 할 차례일 때 커밋 숫자 잘 따라가기.
--------------------------------------------------------------------------------------------------------

⑨ 소스트리에서 지난 히스토리 (사이트 추가) 더블클릭시 시간여행 가능.
   -> 과거 시점으로 이동.

⑩ 깃발 3개 더 꼽고 시간 이동 하기 실습.
(MYINFO.md 파일 생성 _ 취미,MBTI,혈액형 작성 후 add, commit, 코멘트 커밋 후 시간이동
처음 생성한 파일은 커밋에 숫자가 안뜨나 , 한 번 추적(첫커밋 이후)엔 커밋에 신규 숫자가 출력.
--------------------------------------------------------------------------------------------------------

⑪ 지금까진 git , 이젠 github를 쓸 차례.
내 컴퓨터에 깃발을 꽂았다면 , 이젠 깃허브에 깃발을 꽂을 차례.
(워드파일로 저장하던걸 구글드라이브에 업로드 하는 느낌)
깃허브에 올린 프로젝트들은 여러사람이 안전하게 보관 , 동시 작업(편하게) 가능

원격 저장소 생성 - 깃허브.com 이동
create - repository - 생성

저장소 주소 복사

https://github.com/jihoon-devstu/minihomepage.git

소스트리에서 원격 - 추가 - 원격 이름 (origin 국룰) - url에 복붙 - 확인
--------------------------------------------------------------------------------------------------------

⑫ 원격 저장소(깃허브)에 푸시 하기.
push 버튼 클릭 후 main 체크박스 체크 , push
본인 계정 선택 후 컨티뉴
--------------------------------------------------------------------------------------------------------

⑬ md _ 마크다운
해당 소스 코드들 가이드 자료에서 참고
제목크기, bold, 기울임, 순서목록, 코드, 구분선, 취소선, 인용문, 테이블, 링크, 이미지
vs code에서 왼쪽 아래 엑스텐션 - markdown 검색 후 다운로드.
마크다운 연습 및 실습은 지금은 건너뜀. (가이드파일에서 예제 파일 내려받은 후 마크다운 문법 추가)
--------------------------------------------------------------------------------------------------------

⑭ 깃허브에서 내 컴퓨터로 다운받기
1. 깃허브 레파지토리에서 주소 복사
소스코드 가서 클론 - 주소 복붙 , 파일경로 설정 , 확인
2. 뉴탭 - Remote에서 본인 계정 Mini 검색 후 클론 눌러도 가져오기 가능
--------------------------------------------------------------------------------------------------------

⑮ 다른 사람이 설정한 깃발 내 코드로 가져오기
(깃허브에서 직접 코드 수정 및 변경은 완전 비추)
코드 수정 후 커밋 체인지 - 커밋 메시지 작성 - 커밋 체인지
소스트리에서 pull - 하면 하나 추가됨.
(main - 로컬메인, origin/main - 원격의 메인 따라서 모두 최신상태의 커밋)
--------------------------------------------------------------------------------------------------------

16. 원격 저장소에서 로컬로 파일 가져오기 실습
로컬의 저장소가 있는 폴더 삭제 후 깃허브에서 클론하기
클론의 경우 , 오픈소스로 되어있는 (리액트 등) 것들은 가져와서 코드 뜯어보기 가능함.
--------------------------------------------------------------------------------------------------------

17. Push / Pull 실습
원격 저장소에서 수정 및 로컬로 pull
로컬 저장소에서 수정 및 원격으로 push
소스트리에서 커밋했을 때 자동 푸쉬 가능 (체크박스)
패치버튼 = 새로고침
--------------------------------------------------------------------------------------------------------

18. 커밋 초기화
커밋 우클릭 후 이 커밋까지 브랜치를 초기화 , 하드 선택 후 확인
리셋 , 리버트 (리셋은 브랜치 초기화 , 리버트는 커밋 되돌리기)

--------------------------------------------------------------------------------------------------------

19. 커밋 수정
마지막 커밋 정정 (push이후엔 쓰지 않는걸 추천)
--------------------------------------------------------------------------------------------------------

20. 커밋 없이 저장
- 스태시 기능 활용
--------------------------------------------------------------------------------------------------------

21. 원격 저장소에서 협업하기 (브랜치 이해하기)
메인 브랜치는 배포할 때 말곤 건드리지 않음.
나만의 브랜치를 생성하여 작성 후 배포.
--------------------------------------------------------------------------------------------------------

22. 미니 홈페이지 만들기
어떤 사람이 어떤 것을 작업하고 있는지 확인 가능 , 및 이슈 관리 가능
- 깃허브에서 프로젝트 생성 , 
- 이슈 생성
- 메인 브랜치에가서 feat 브랜치 생성
- 병합 (merge)
  - 빨리감기 (fast-forward) _ 공백  / 1 2 3 통합
  - 병합 커밋 (merge commit) _ 1 2 3 / 4 5 통합
  - 충돌 (conflict) _ 1 2 3 4 / 1 2 5 6 통합하면 충돌남
   -> 브랜치에서 메인을 병합 - 충돌 - VSCODE가서 수정 - 커밋 - 병합 - 메인브런치로가서 메인 병합
  - 풀리퀘스트요청 ( 병합 요청 내용 작성하여 팀장님께 요청. (코멘트 작성 가능))

23. 깃허브 협업 실습 완료 !!!


