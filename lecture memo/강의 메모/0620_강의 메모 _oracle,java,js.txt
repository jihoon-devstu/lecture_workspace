
--------------------------------------------------------------------------------------------------------

수업 시작.

JSP란? Java Server Page 즉 자바 기술로 만든 서버 측에서 실행 되는 페이지.
	= 서블릿과 목적이 같다.

차이점 ? 서블릿도 디자인을 표현할 수 있으나 , html 문서를 모두 문자열로 처리해야 하므로
	효율성이 극도로 떨어짐... 따라서 서블릿과 jsp중 누구를 사용해야 하느냐가
	고민된다면 , 판단 기준은 ? 현재 처리하려는 코드에서 디자인이 포함되어 있는지
	판단하면 된다....  M(.java) V(JSP , HTML) C 패턴 
	주요 경쟁자 ) ASP , PHP 와 같은 서버 측에서 실행되는 스크립트 언어와 경쟁...

JSP의 실행 위치 : 오직 서버에서만 실행된다... 따라서 JSP , ASP , PHP와 같은 언어를 가리켜
		Server Side 언어라고 한다.
		job korea - 서버 개발자 모집

javascript의 실행 위치 - 클라이언트의 웹브라우저에서 실행됨.

--> 자바스크립트는 클라이언트에게 노출되는 목적의 언어이므로 , 절대 보안이 불가능하다.
--> Node.js (서버측 javascript)
--------------------------------------------------------------------------------------------------------
JSP 문법 시작

JSP 코드를 작성할 수 있는 영역

1) <%page%> : 지시영역 - 현재 페이지에 대한 인코딩 등 페이지 자체에 대한 정보 작성

2) <%! %> : 선언부 - 멤버변수와 멤버 메서드를 작성할 수 있는 영역

3) <%%> : 스크립틀릿 영역 - 개발자가 로직을 작성할 수 있는 service() 메서드 영역
	-> 장차 미래에 이 jsp가 서블릿으로 변경될 때, service()의 영역이 된다.
	-> 따라서 개발자는 스크립틀릿 영역에 요청을 처리하는 코드를 짜면 된다.

4) <%=%> : 데이터 (문자,숫자,논리값,객체)를 작성하는 영역  -> out.print(); 의 줄임 표현.

--------------------------------------------------------------------------------------------------------
느낌표를 선언하면 , 선언부라하여 멤버 변수와 멤버 메서드를 작성할 수 있다.

<%! 
	String url = "jdbcx:mysql://localhost:3306/shop";
	String user = "shop";
	String pwd = "1234";	
	public void connect(){	
	}

%>

<% page %>
--------------------------------------------------------------------------------------------------------

아래의 변수 out은 개발자가 현재 코드에서 선언한 적이 없음에도 불구하고그 기능을 제대로 한다...
개발자가 정의하지 않아도 톰켓 컨테이너가 jsp내에서 기본적으로 사용할 수 있도록
 미리 생성해놓고 개발에 사용될수 있도록 지원하는 jsp 의 객체들을 가리켜 내장객체라한다.
 built - in object 라고 한다. 

out.print("접속객체는"+con);

--------------------------------------------------------------------------------------------------------
제이쿼리는 아래의 문장 형식을 벗어나지 않는다.
(누구를 - css선택자). 어떻게()

제이쿼리의 목적 ?

javascript 코드를 간단하게 작성하자 !! 
바닐라 javascript (순수 js코드)

--------------------------------------------------------------------------------------------------------

글 목록보기 - jsp
글 쓰기 폼 - jsp, html
글쓰기 요청 처리 - servlet
글 상세보기 폼 - jsp
글 삭제 요청 - servlet
글 수정 요청 - servlet




--------------------------------------------------------------------------------------------------------

보통 중소 회사

개발 : 윈도우
서버 : 리눅스 
-> tomcat / Resin(유료)
DB : Mysql (중,소)

사용언어 : JSP , java , php
--------------------------------------------------------------------------------------------------------
대형 회사

개발 : 윈도우
서버 : 유닉스
-> WebLogic/JBoss
DB : Oracle (대형)
--------------------------------------------------------------------------------------------------------

통신규약의 사전 약속
HTTP 프로토콜. 





--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------








--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






	
--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------




--------------------------------------------------------------------------------------------------------

