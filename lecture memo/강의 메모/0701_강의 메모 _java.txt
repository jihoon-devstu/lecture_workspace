
--------------------------------------------------------------------------------------------------------

수업 시작.

[
게시판 - 데이터베이스를 무식하게 연동 후에 왜 안좋은지 알고나서.
	데이터베이스 연동 - 커넥션 풀링, 페이징 처리
	Hibernate , Mybatis(dao를 한줄로 줄임)
댓글 게시판
]

summernote 가져오기.
메이븐 리파지토리 - lombok 디펜던시 추가 , 홈페이지가서 jar파일 다운로드
java -jar lombok.jar

lombok getter/setter 자동 생성
//Annotation 프로그램에 읽혀지는 주석
@Data

--------------------------------------------------------------------------------------------------------

create table notice(
notice_id int primary key auto_increment
, title varchar(100)
, writer varchar(20)
, content text
, regdate timestamp default now()
, hit int default 0
);





--------------------------------------------------------------------------------------------------------

커넥션 풀링 

커넥션은 한 사용자가 요청할 때 마다 생성이되어 DB에 접속을 함.

그렇게되면 굉장한 과부하가 걸림 (사용자가 1명 들어올때마다 커넥션객체 생성 하고 접속해야하니까)

그렇기때문에 , 사용자가 없더라도 미리 커넥션객체들을 만들어놓고 보관해두는걸
커넥션 풀링이라고 함.

--------------------------------------------------------------------------------------------------------

쓰레드가 일하고 있을 때 , 쓰레드에 동시접속이 일어나지 않도록
싱크로나이즈드가 필요함. (동기화)

-> A가 A메서드를 쓰고 있으면 , B는 A메서드를 쓰려면 A가 메서드 쓰는걸 기다렸다가 쓰게됨.




--------------------------------------------------------------------------------------------------------

파라미터는 "경로" 뒤에 붙이는 것이 HTTP의 규약 !!!

[도메인] / [경로]?[파라미터]
?엔 띄어쓰기도 안됨 !!! 
파라미터는 여러개 &로 구분해서 넘길 수 있음.

<a href = "/notice/content.jsp?notice_id=<%=notice.getNotice_id()%>&user=<%=notice.getWriter()%>">

String notice_id = request.getParameter("notice_id");
String user = request.getParameter("user");

--------------------------------------------------------------------------------------------------------

1. mybatis 받아와서 dependency 넣기.
2. help 이클립스 마켓플레이스에서 mybatips 다운로드
3. mybatis-3-config.dtd 파일 받기
4. Mybatis-config.xml (xml 파일) 만들기
5. mybatis-3-mapper.dtd 파일 받기
6. ctrl + n 한 다음 mybatis 파일 생성
7. xml파일 및 mybatis 파일에 링크 대신 SYSTEM "파일명 붙여넣기"

8. mybatis 파일 안에 /mapper 아래로 내려놓고
	그 안에 쿼리문 작성

ex)
	<select id="selectAll">
		select * from notice order by notice_id desc
	</select>



--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------








--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






	
--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------




--------------------------------------------------------------------------------------------------------

