
--------------------------------------------------------------------------------------------------------

수업 시작.

[
게시판 - 데이터베이스를 무식하게 연동 후에 왜 안좋은지 알고나서.
	데이터베이스 연동 - 커넥션 풀링, 페이징 처리
	Hibernate , Mybatis(dao를 한줄로 줄임)
댓글 게시판
]

summernote 가져오기.
메이븐 리파지토리 - lombok 디펜던시 추가 , 홈페이지가서 jar파일 다운로드
java -jar lombok.jar

lombok getter/setter 자동 생성
//Annotation 프로그램에 읽혀지는 주석
@Data

--------------------------------------------------------------------------------------------------------

create table notice(
notice_id int primary key auto_increment
, title varchar(100)
, writer varchar(20)
, content text
, regdate timestamp default now()
, hit int default 0
);





--------------------------------------------------------------------------------------------------------

커넥션 풀링 

커넥션은 한 사용자가 요청할 때 마다 생성이되어 DB에 접속을 함.

그렇게되면 굉장한 과부하가 걸림 (사용자가 1명 들어올때마다 커넥션객체 생성 하고 접속해야하니까)

그렇기때문에 , 사용자가 없더라도 미리 커넥션객체들을 만들어놓고 보관해두는걸
커넥션 풀링이라고 함.

--------------------------------------------------------------------------------------------------------








--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------








--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






	
--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------




--------------------------------------------------------------------------------------------------------

