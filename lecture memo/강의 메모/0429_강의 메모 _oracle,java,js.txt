
--------------------------------------------------------------------------------------------------------

JAVA 수업 시작.

--------------------------------------------------------------------------------------------------------
Javascript란

인터프리터(interpreter) 언어 / 
브라우저에 탑재되어 있으므로, html 실행 시 함께 실행,
따라서 시행부라는 개념 없다.

단점)실행할 때 마다 자료형 포함 문법 검사를 수행. 그러다 보니 할일이 많음.
또한 매번 수행하므로, 속도 느림..

장점)초보자들도 접근하기 쉬운 언어
사용이 간편하여, 결과를 바로 확인할 수 있는 분야에 활용도가 없음.
예) 데이터 분석에서의 파이썬 등등.

js는 html을 바로 제어 가능.
	
javascript는 데이터의 종류를 신경 쓸 필요가 없다.
따라서 초보자들에게는 큰 부담이 없는 언어.

--------------------------------------------------------------------------------------------------------
java란

클래스명명 규칙 :
1. 반드시 대문자로 시작해야 함
2. 두 단어의 조합일 경우 , 낙타 등 기법으로 작성

파일명 규칙 : Java는 클래스명과 파밀명이 반드시 일치해야함
좋은습관 : 파일명 저장 시 직접 작성하지 말고, 복사해 쓰자

Java의 기본자료형 :  다른 언어와 마찬가지로, 3가지 종류가 문자,숫자,논리값

이 클래스를 실행할 수 있는 클래스로 정의하려면 , 즉 java.exe의 대상이 되려면
반드시 main() 메서드를 정의해야 한다.

컴파일 기반 언어(c,c++,vava,c# 등등)의 특징

단점)      실행 전 컴파일 과정이 번거로울 수 있음
	초보자들에게 진입장벽이 높음

장점)      일단 한번 자료형, 문법 검사(컴파일 compile)가 끝나면 그 결과물을
	바이너리 파일로 저장해 놓고, 이 후부터는 두번 다시 문법검사를 수행
	하는 것이 아니라, 컴파일 결과물로 생성된 기계어를 실행하기 때문에
	이 시점부터는 인터프리터 언어에 비해 속도가 훨씬 빠름.
--------------------------------------------------------------------------------------------------------
자료형이란?

- 프로그래밍 언어엣허 사용 가능한 데이터의 종류
- 일반적인 컴파일 방식의 프로그래밍 언어에서는 변수 선언 시 해당 변수가 담게 될 데이터의 종류를 컴파일 단계에서 미리 결정
- 대부분의 프로그래밍 언어에서 공통적으로 지원하는 자료형은 숫자,문자,논리값

문자 : char , string
숫자 : 	정수 - byte(1) < short(2) < int(4) < long(8)
	실수 - float(4) < double(8)
논리값 : boolean 
--------------------------------------------------------------------------------------------------------
형변환이란?

- 같은 종류의 자료형은 서로 호환됨
- 시스템에서 자동으로 처리하는 자동형변환 , 개발자가 직접 처리하는 강제 형변환이 있음.

	byte b = 5;
	short s = 7;
	byte x = 8;

자동 형변환 ex) s = b ;

- 개발자가 처리하는 것이 아니라 , 컴파일러에 의한 자동 형변환 이라 한다
1) 같은 가족 (숫자라는 같은 종류의 자료형)
2) 작은 것을 큰 자료형에 대입하고 있으므로 , 데이터 손실이 발생하지 않음. 

강제 형변환 ex) b=(byte)s; 

- 이때 사용되는 소괄호()를 cast 연산자라 한다. 
- 주의) 형변환(강제이던 자동이던) 이란 언제나 같은 종류끼리 지원

--------------------------------------------------------------------------------------------------------

char c = 'B'; // 컴파일 타임에 , java 컴파일러가 귀찮음을 감수하고 유니코드를 찾아봄

char d='한'; // 컴파일 타임에 , java 컴파일러가 귀찮음을 감수하고 유니코드를 찾아봄

char k=96; // 인간이 개발자가 유니코드를 찾아서 직접 넣어준것으로 생각하여 고마워함

char m =-30;// char 형은 사실상 숫자형은 맞으나 , 여기에 담을 수 있는 수는 
	       아스키포함한 유니코드를 담기 위한 용도이다 
	       따라서 Keycode 체계에서는 음수를 지원하지 않기 때문에 에러 발생

--------------------------------------------------------------------------------------------------------

접속 클라이언트 = 디비버


--------------------------------------------------------------------------------------------------------
-- 기존에 생성한 MEMBERSHIP 테이블은 검증되지 않고 결점이 많은
-- 데이터를 허용하므로, 데이터의 신뢰성이 없다.
-- 즉 데이터로써 가치가 없다. 
-- 따라서 테이블 생성시 각 컬럼에 들어갈 데이터를 까다롭게 각종 제한을 가하는
-- 데이터베이스에 조건을 가리켜 제약조건이라고 한다 (CONSTRAINTS)
ID CARA


--------------------------------------------------------------------------------------------------------




--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------------------









