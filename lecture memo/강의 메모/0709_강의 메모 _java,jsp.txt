
--------------------------------------------------------------------------------------------------------

수업 시작.

MVC 패턴

M : Model 
 -> 데이터 표현 코드 , CRUD 코드 , 업무 로직 (비즈니스 로직)

V : View 
 -> 보여지는 영역 (디자인 , UI 등)

C : Controller
 -> 중재하는 영역

--------------------------------------------------------------------------------------------------------

MVC패턴에 의해 , 디자인 영역과 로직 및 데이터 영역은 분리시켜야 한다.

- 유지보수성이 높아지기 때문에.
- 중간에 중재자인 Controller가 나서야 한다.

-> 컨트롤러는 Servlet으로 정의되어야 한다.

                   why? 
- 1) JSP는 View로 사용할 것이므로
- 2) 웹 기반의 컨트롤러는 클라이언트의 요청을 받는 능력이 있어야 하므로 !!!

--------------------------------------------------------------------------------------------------------

Controller 의 5대 업무

1. 요청을 받는다.

2. 요청을 분석한다.

3. 직접 일하지 않고 알맞는 로직객체(모델) 에게 일을 시킨다.

4. 결과에 보여질 데이터를 보관한다.

5. 알맞는 결과를 보여준다.

--------------------------------------------------------------------------------------------------------

실제 업무에서의 MVC??

 - 기존 우리의 MVC는 요청의 수마다 컨트롤러 매핑 해야함

 - 그러나 , 요청에 대한 처리를 1:1 대응하는 객체로 처리하는 개발 패턴을 가리켜 Command Pattern 이라 함.




--------------------------------------------------------------------------------------------------------


WEB - INF 는 외부의 웹 브라우저로부터의 접근을 막는 것이지

자바 코드 내부에서의 접근을 막는것이 아니다 !!



--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------








--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






	
--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------




--------------------------------------------------------------------------------------------------------

