0421_강의 메모_My_SQL,CSS

--------------------------------------------------------------------------------------------------------

CSS - 레이아웃 마무리
JS - 기초, 심화(), 연산자
JAVA - 수요일~목요일쯤부터 나갈 예정
MYSQL - 명령어 연습

--------------------------------------------------------------------------------------------------------

CSS

float 연습 

 <div id="container">
	<div id="header">header</div>
	<div id="asside">asside</div>
	<div id="section">section</div>
	<div id="footer">footer</div>
    </div>

float로 asside , section 을 띄우고
footer에 clear both 로 비어있는 공간 인식 시키기

--------------------------------------------------------------------------------------------------------

JS 시작

node.js
- 브라우저 없이 pc에서 단독적으로 돌아감.

브라우저 기반 js

html 1989년도 - 그냥 문서로 만듦. html 1.0

95년도 넷스케이프가 JAVA_Script를 만듬
(팀 버너스리가 만들어놨던 html을 업그레이드 , 브라우저가 탄생됨)

  -> 마이크로소프트에서 window os 를 설치하면 인터넷 익스플로러가 자동 설치되며 넷스케이프가 망함.
  -> 유럽의 표준화 협회에 JS 기술을 기증함. JS가 전세계의 표준이 되며 MS에서 만든 자신들만의 스크립트 언어 (VD script , J script)도 망함.
  -> 따라서 모든 브라우저엔 JS 엔진이 설치 되어있음. (f12 눌러서 Console이 JS 엔진

--------------------------------------------------------------------------------------------------------

자바스크립트의 특징

자바스크립트란 ? 

- 정적문서인 html에 프로그래밍적 능력을 부여하기 위한 브라우저 기반 스크립트 언어
  html 문서는 실행 중에 컨텐츠가 변경될 수 없지만 , 자바스클비트를 이용하면 *동적 변경 가능.
- 동적 변경 :실행되고있는 상태에서 프로그램이 변경됨. (영어로 dynamic)

인터프리터 언어

-  Javascript는 인터프리터 방식의 언어이므로 코드 해석 과정이 ,프로그램 실행시 마다 진행 됨.
- 참고로 JAVA, C#과 같은 대부분의 컴파일 기반의 언어는 실행전에 코드를 해석하여 그 결과를 저장해두고, 
  그 이후 부터는 결과만 실행하는 방식.

JS코드의 3가지 작성 영역

 1) <script> </script> 태그 사이에 작성
 2) on~ 으로 시작하는 이벤트 핸들러에 작성
 3) 링크 태그의 href 속성에 javascript 접두어를 붙이면 javascript 코드로 인정됨

JS버전의 표준은 ES6이다. ★ (생성자 , 클래스, 상속 등 JAVA의 기술이 들어오기 시작하며 객체지향 프로그래밍이 가능해짐.)

--------------------------------------------------------------------------------------------------------

[프로그래밍 학습 순서]

 1) 변수와 자료형
	- 컴퓨터에게 일거리를 제공하는 방법 (변수 선언)
	 예) 3, 4 와 같은 숫자를 컴퓨터에게 전달하는 방법

 2) 연산자
	- 일거리를 대상으로 더할지, 뺄지 등의 어떤 연산을 시킬지를 결정하는 부호

 3) 제어문
	- 프로그래밍의 효율성을 위해 반복수행할 구간을 정하거나 조건을 부여

 4) 함수
	- 예전에 작성한 코드를 재사용 하는 법

 5) 배열
	- 대량의 데이터를 처리하는 방법

 6) 객체
	- 현실의 사물을 다루는 방법

--------------------------------------------------------------------------------------------------------

컴퓨터는 숫자 , 문자 , 논리(true,false) 만 이해함.

우리의 일상에서는 , 즉 사람이 이해하는 데이터의 종류는 굉장히 많음.
(촉각 , 후각 , 시각 , 청각 , 숫자 , 문자 등)
프로그래밍 분야에서의 데이터 종류는 숫자,문자,논리밖에 없음.

--------------------------------------------------------------------------------------------------------

 변수에 대입할 수 있는 데이터의 종류는 3가지 밖에 없는데, 이 3가지 자료형을
    표기할때는 정해진 표기법을 이용해야 함.(리터럴 표기법)

    1. 숫자
        ex) x=56; 오직 숫자만 명시해야 함. 즉 (숫자형 리터럴) 은 숫자만 적어야 함

    2. 문자
        ex) y="사과"; 문자의 경우 , 숫자가 아니므로 반드시 "" 로 감싸야 함. (문자형 리터럴)

    3. 논리값
        ex) z=true , k=false; 논리값의 경우 true,false 단어를 그대로 적어야함 (논리형 리터럴) 

--------------------------------------------------------------------------------------------------------

프로그래밍에서의 변수란?

수학적 개념에서의 변수 = 값이 변할 수 있는 문자 또는 기호
프로그래밍에서의 변수 = 메모리와 관련한 개념 (메모리 할당 , 변수명 지정 , 값 할당)

따라서 , 변수 선언시 만들어지는 공간 자체가 변수이며 , 그 변수에 붙여진 이름이 변수명.

* 변수명에는 특수문자로 시작할 수 없으나 , 예외적으로 $ , _ (언더바)는 즐겨 씀.

* 변수명은 절대로 숫자로 시작할 수 없음.

* 예약어 (let, var등) 는 변수로 사용될 수 없다.

* 변수명이 두 단어 이상의 복합어일 경우 , 뒷 단어릐 첫 철자를 대문자로 작성 (camel기법)이 프로그래밍 작성 시의 관례.

* HTML 은 대소문자를 가리지 않으나 (프로그래밍 언어가 아니므로) JavaScript는 대소문자를 철저하게 가린다.


--------------------------------------------------------------------------------------------------------

프로그래밍에서의 연산자란 ? 

- 연산을 결정하는 부호
- 연산자의 응용 분야로는 , 어떤 값이 어떤 수의 배수인지 판단 , 짝수, 홀수 판단시 쓰임.
- 첫 변수 선언시에만 let , var 등을 넣으며 값 재할당시 다시 붙이지 않음. (let x=7; x=8)

--------------------------------------------------------------------------------------------------------
※ 산술 연산자 (+, -, *, /, %, **)

- 산술연산자 중 + 연산자는 연결자로써의 기능 있음 (x=5 , y="사과" x+y="5사과"
- 연결자는 +에만 해당됨 , -는 해당 안됨

* 5%3을 했을 때 , 몫1과 나머지2 중 나머지를 구하는 연산자가 % 연산자
let x=5;
let y=3;
let z=x%y;
console.log ("나머지는",z);
--------------------------------------------------------------------------------------------------------
※ 대입 연산자  ( =,+=, -=, *=, /= , %=)

* 기존의 값에 누적시키는 연산자
let y = 7
y=y+3
y+=3

--------------------------------------------------------------------------------------------------------
※ 증감 연산자 (++ , --)

++ = 1 누적 증가
-- = 1 누적 감소

    let x=1;
    x =x+1; // x++과 동일

    let y=5;
    y = y-1; // y-- 와 동일

--------------------------------------------------------------------------------------------------------
※ 비교 연산자 ( ==, ===, !=, !==, >, >=, <=)

* == 으로 비교할 때 숫자와 문자를 비교하려 할 때 , 문자열을 숫자로 자동으로 바꿔서 비교해줌.
  ex) 2=="2" true. 

* === 으로 비교할 때 두개의 자료형이 같은지도 비교함.
  ex) 2==="2" false

* !=의 경우 , 같지 않냐는 의문 (==는 같냐는 의문) 단, 문자열 숫자로 자동 바꿈. (==와 같음)
   ex) 2!="2" false. 

* !==의 경우 , 자료형이 같은지도 비교
   ex) 2!=="2" true. 



--------------------------------------------------------------------------------------------------------
※ 삼항 연산자

*   삼항 연산자는 항이 3개짜리이기 때문에 붙여진 이름
    (소괄호안의 결과가 참이니)? 좌측항 : 우측항;
	참이면 좌측항 실행 , 거짓이면 우측항 실행.

--------------------------------------------------------------------------------------------------------
※ 논리 연산자 ( && , ll, ! )

&& 는 and 연산자로 모든 값이 true여야만 true로 반환됨

[공고]
1. 서울 거주
&& (and)
2. 면허증 보유
&& (and)
3. 자격증 보유

ll 는 or 연산자로 둘중 어느것이 true면 true 반환됨

!는 not (부정)

!x && !y 
true / false -> false
!x ll !y
true / false -> true
--------------------------------------------------------------------------------------------------------

JavaScript 와 html , css를 활용한 프로그래밍 시작.

script의 경우 , </head> 위에 작성.

보통 바디단에 html 작성 , css로 이미지 작성 , 그 아래 script 작성
 
onclick 으로 js가 아닌 html 에서 지원되는 이벤트 핸들러.
js가 아니라서 , 즉 프로그램이 아니라서 대소문자를 가리지 않음.

 let a = 1
 function plus(){
    a++;
    console.log("카운트="+a);


  <button onclick="test();">눌러봐</button>


--------------------------------------------------------------------------------------------------------

버튼 눌러서 이미지 다음으로 넘기기

let n = 1;

function next (){
	n++;
	 document.querySelector("img").src="../../../images/hero/image"+n+".png";
	}

<button> onclick="next()"> 다음 컷</button>
 <img src="../../../images/hero/image1.png" alt="">


--------------------------------------------------------------------------------------------------------

넓이 증가
document.querySelector("#pic").style.width=a+"px";

높이 증가
document.querySelector("#pic").style.height=d+"px"

투명도 증가
document.querySelector("#pic").style.opacity=b;

각도 조절
document.querySelector("#pic").style.transform="rotate("+c+"deg)";



<tr> </tr>



