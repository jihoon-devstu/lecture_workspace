
--------------------------------------------------------------------------------------------------------

수업 시작.

Java UI 기획서

- 업무 구분 영역

com.sinse.shop.home
com.sinse.shop.product
com.sinse.shop.member
com.sinse.shop.order
com.sinse.shop.cs

- 쇼핑몰 기획 자바 시작 ! 

 - 피그마로 디자인
 - 디자인한걸 보고 자바로 구현 시작

--------------------------------------------------------------------------------------------------------

com.sinse.shop.common.config - Config.java 에서 상수들 관리 !! 

상수는 자세할수록 좋음.

--------------------------------------------------------------------------------------------------------

[유저 애플리케이션]

[관리자 애플리케이션]
기능 : 상품등록 , 수정 , 삭제 , 목록 , 상품 상세 페이지 : 판매자-구매자(1:1채팅) , 이미지 크롤링
회원관리 : (암호화 - 해시값 , +salt), 회원메일 (회원정보 수정시 임시번호 발행)
주문 관리 (DB 설계)
QNA 게시판 (코멘트 게시판)

--------------------------------------------------------------------------------------------------------

ThemeWagon = 무료 HTML 템플릿


--------------------------------------------------------------------------------------------------------

Mysql 쿼리문

유저 만들기
create user 'shop'@'%'identified by '1234';

권한 부여하기
grant all privileges on shop.* to 'shop'@'%' with grant option;

권한 갱신하기
flush privileges;

관리자 계정 테이블 생성
create table admin(
admin_id int primary key auto_increment
, id varchar(20)
, pwd varchar(64)
, name varchar(20)
);

관리자 계정 하나 생성
insert into admin(id, pwd, name) values('admin', '1234', '지훈');
select *from admin;
--------------------------------------------------------------------------------------------------------
바인드 변수 !

String sql = "select *from admin where id=? and pwd =? ";

? = 바인드 변수.

쿼리문을 수행하기 위해 바인드 변수를 먼저 지정해야 한다 !! 


--------------------------------------------------------------------------------------------------------


이 클래스의 정의 목적은 로직을 작성하기 위함이 아니라 , 데이터베이스의 한 사람의 정보를 담기 위한 객체일 뿐이다... 
이러한 목적의 클래스를 가리켜 모델 객체라고 한다.

멤버 변수는 데이터베이스의 테이블의 컬럼명과 매칭이 되어야 한다. + 이 클래스는 은닉화 되어야 한다.



--------------------------------------------------------------------------------------------------------

개발자는 하나의 자바프로그램 내에서 비동기적으로 동시에 실행하고 싶은 코드가 있다면
쓰레드로 정의하면 되는데 , 이때 코드는 쓰레디의 run() 메서드에 작성해야 한다.

이 run() 메서드는 개발자가 절대로 호출해서는 안된다.

run()은 os가 해당 쓰레드를 스케쥴러에 의해 선택한 순간 , JVM이 호출하는 것이기 때문에
만일 개발자가 run()을 호출하면 그냥 일반 메서드 호출이 되며

OS와 JVM이 관여하지 않는다.

쓰레드는 java.lang에서 지원하는 기본 클래스이므로 import 불필요 !!! 



--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------








--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






	
--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------




--------------------------------------------------------------------------------------------------------

