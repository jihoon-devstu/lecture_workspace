
--------------------------------------------------------------------------------------------------------

수업 시작.

Vue 를 개발하는 2가지 방법 !! 

1. CDN 방식
	- 개발 단계에서만 사용하는 것을 추천

2. Project 설정 방식
	- 실제 제품 개발 단계에서 사용하는 것을 추천
	- 일종의 프레임워크 기반이므로 , Node.js가 설치되어 있어야 함.
	- Node.js 를 배울 필요는 없고 , 단지 개발 도구가 Node.js 기반인 것 뿐
--------------------------------------------------------------------------------------------------------

Vue 3 이상에서는 모든 코드를 setup() 안에 넣으면 됨 !!!

스프링부트부터 분산환경에서 작업이 가능해짐 ! MSA 라고 함.

스프링은 MSA 지원이 안됨 !! 

JSP 는 분산안하는 환경에서 유리.
HTML 에서 뷰 + 리액트는 분산 환경에서 유리 !! 

--------------------------------------------------------------------------------------------------------
js 에서는 for , forEach 둘다 반복문임 ! 

forEach는 배열의 각 요소에 대해 콜백 함수를 한번 씩 실행하는 배열 메서드
고전적인 for문과 목적이 다름.

[특징]
        1) 반드시 배열이 있어야함.
        2) 콜백 함수의 두번째 인자가 인덱스이다.
        3) break , continue 사용 불가. (즉 , 반복 중단 불가능)
        4) 반환값은 undefined, 즉 반복 결과를 반환하지 않음.
        
--------------------------------------------------------------------------------------------------------

구조분해란??

객체나 배열에서 필요한 값만 쉽게 꺼내서 변수에 담을 수 있는 문법

예) 
const person={
	name:"scott",
	age:30
}

const{name,age}



--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------








--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






--------------------------------------------------------------------------------------------------------






	
--------------------------------------------------------------------------------------------------------







--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------





--------------------------------------------------------------------------------------------------------




--------------------------------------------------------------------------------------------------------

